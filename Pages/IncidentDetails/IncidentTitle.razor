<div class="title-container">
    <div class="incident-title">
        @if (!editOn)
        {
            <div class="title-text-div">
                <i class="material-icons" @onclick="toggleEdit">edit</i>
                <span> @title </span>
            </div>
        }      
        else
        {
            <textarea @bind="newTitle" class="small"></textarea>

            <div class="edit-buttons">
                <button class="btn cancel-btn text-white" @onclick="cancel">
                    <div>
                        <i class="material-icons">cancel</i>
                        <span>Cancel</span>
                    </div>
                </button>
                <button class="btn save-btn text-white" @onclick="update">
                    <div>
                        <i class="material-icons">save</i>
                        <span>Save</span>
                    </div>
                </button>
            </div>           
        }

    </div>

</div>

@code {
    [Parameter]
    public string incidentId { get; set; }
    [Parameter]
    public string title { get; set; }


    private bool editOn = false;
    private string newTitle;

    private void toggleEdit()
    {
        editOn = !editOn;
        if(string.IsNullOrEmpty(newTitle))
            newTitle = title;        
    }

    private async Task update()
    {
        string token = await localStorage.GetItemAsync<string>("token");  
        string loggedInUser = await UserService.GetLoggedInUserId();

        bool isSuccess = await IncidentService.UpdateIncident(token, new
        {
            IncidentId = incidentId,
            Parameter = "Title",
            Value = newTitle,
            UserId = loggedInUser
        });

        if (isSuccess)
        {
            editOn = !editOn;
            title = newTitle;
        }
    }

    private void cancel()
    {
         editOn = !editOn;
    }


}
