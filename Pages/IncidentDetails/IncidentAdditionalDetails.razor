<div class="field-title">
    <span>Additional Details </span>
    <i class="material-icons edit-btn" @onclick="toggleEdit">edit</i>
</div>
<div class="description-container">
       <div class="incident-description">
        @if (!editOn)
        {
            <div class="description-text-div">

                <p> @additionalDetails </p>
            </div>
        }      
        else
        {
            <textarea @bind="newAdditionalDetails" class="medium"></textarea>
             <div class="edit-buttons">
                <button class="btn cancel-btn text-white" @onclick="cancel">
                    <div>
                        <i class="material-icons">cancel</i>
                        <span>Cancel</span>
                    </div>
                </button>
                <button class="btn save-btn text-white" @onclick="update">
                    <div>
                        <i class="material-icons">save</i>
                        <span>Save</span>
                    </div>
                </button>
            </div>   
        }

    </div>
</div>

@code {
    [Parameter]
    public string incidentId { get; set; }
    [Parameter]
    public string additionalDetails { get; set; }
 

    private bool editOn = false;
    private string newAdditionalDetails;

    private void toggleEdit()
    {
        editOn = !editOn;
        if(string.IsNullOrEmpty(newAdditionalDetails))
            newAdditionalDetails = additionalDetails;
        // StateHasChanged();
    }

    private async Task update()
    {
        string token = await localStorage.GetItemAsync<string>("token");  
        string loggedInUser = await UserService.GetLoggedInUserId();

        bool isSuccess = await IncidentService.UpdateIncident(token, new
        {
            IncidentId = incidentId,
            Parameter = "AdditionalData",
            Value = newAdditionalDetails,
            UserId = loggedInUser
        });

        if (isSuccess)
        {
            editOn = !editOn;
            additionalDetails = newAdditionalDetails;
        }
        //StateHasChanged();
    }

    private void cancel()
    {
        editOn = !editOn;
       // StateHasChanged();
    }


}
